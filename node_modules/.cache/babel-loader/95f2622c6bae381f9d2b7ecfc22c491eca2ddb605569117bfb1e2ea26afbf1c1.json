{"ast":null,"code":"var _jsxFileName = \"/Users/hyunjunekim/Documents/GitHub/moment4u/src/components/StoryGrid.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StoryGrid = ({\n  stories\n}) => {\n  if (!stories || stories.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        padding: '2rem',\n        textAlign: 'center',\n        color: 'rgba(255, 255, 255, 0.7)'\n      },\n      children: \"No stories yet. Create your first story!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: stories.map((story, index) => {\n      // Log story data for debugging\n      console.log(`Story ${index}:`, story);\n\n      // Use first image as thumbnail if thumbnailUrl is not available\n      const thumbnailUrl = story.thumbnailUrl || (story.images && story.images.length > 0 ? story.images[0] : '');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        // Use index as fallback key\n        style: {\n          background: 'rgba(255, 255, 255, 0.1)',\n          borderRadius: '15px',\n          overflow: 'hidden',\n          border: '1px solid rgba(255, 255, 255, 0.2)',\n          transition: 'transform 0.3s ease, box-shadow 0.3s ease',\n          cursor: 'pointer'\n        },\n        onMouseOver: e => {\n          const target = e.currentTarget;\n          target.style.transform = 'translateY(-5px)';\n          target.style.boxShadow = '0 8px 16px rgba(255, 255, 255, 0.2)';\n        },\n        onMouseOut: e => {\n          const target = e.currentTarget;\n          target.style.transform = 'translateY(0)';\n          target.style.boxShadow = 'none';\n        },\n        children: [thumbnailUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: thumbnailUrl,\n          alt: story.title || 'Story image',\n          style: {\n            width: '100%',\n            height: '200px',\n            objectFit: 'cover'\n          },\n          onError: e => {\n            // If image fails to load, replace with a placeholder\n            e.currentTarget.src = 'https://via.placeholder.com/400x200?text=No+Image';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '1rem',\n            color: '#fff',\n            fontSize: '1.2rem',\n            fontWeight: 'bold',\n            textShadow: '0 0 10px rgba(255, 255, 255, 0.5)'\n          },\n          children: story.title || 'Untitled Story'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), story.createdAt && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 1rem 1rem',\n            color: 'rgba(255, 255, 255, 0.7)',\n            fontSize: '0.9rem'\n          },\n          children: new Date(story.createdAt).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, story.id || `story-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n_c = StoryGrid;\nexport default StoryGrid;\nvar _c;\n$RefreshReg$(_c, \"StoryGrid\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","StoryGrid","stories","length","style","width","padding","textAlign","color","children","fileName","_jsxFileName","lineNumber","columnNumber","map","story","index","console","log","thumbnailUrl","images","background","borderRadius","overflow","border","transition","cursor","onMouseOver","e","target","currentTarget","transform","boxShadow","onMouseOut","src","alt","title","height","objectFit","onError","margin","fontSize","fontWeight","textShadow","createdAt","Date","toLocaleDateString","id","_c","$RefreshReg$"],"sources":["/Users/hyunjunekim/Documents/GitHub/moment4u/src/components/StoryGrid.tsx"],"sourcesContent":["import React from 'react';\n\ninterface Story {\n  id: string;\n  title: string;\n  content: string;\n  thumbnailUrl: string;\n  images: string[];\n  createdAt: string;\n}\n\ninterface StoryGridProps {\n  stories: Story[];\n}\n\nconst StoryGrid: React.FC<StoryGridProps> = ({ stories }) => {\n  if (!stories || stories.length === 0) {\n    return (\n      <div style={{\n        width: '100%',\n        padding: '2rem',\n        textAlign: 'center',\n        color: 'rgba(255, 255, 255, 0.7)'\n      }}>\n        No stories yet. Create your first story!\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {stories.map((story, index) => {\n        // Log story data for debugging\n        console.log(`Story ${index}:`, story);\n\n        // Use first image as thumbnail if thumbnailUrl is not available\n        const thumbnailUrl = story.thumbnailUrl || (story.images && story.images.length > 0 ? story.images[0] : '');\n        \n        return (\n          <div\n            key={story.id || `story-${index}`} // Use index as fallback key\n            style={{\n              background: 'rgba(255, 255, 255, 0.1)',\n              borderRadius: '15px',\n              overflow: 'hidden',\n              border: '1px solid rgba(255, 255, 255, 0.2)',\n              transition: 'transform 0.3s ease, box-shadow 0.3s ease',\n              cursor: 'pointer',\n            }}\n            onMouseOver={(e) => {\n              const target = e.currentTarget;\n              target.style.transform = 'translateY(-5px)';\n              target.style.boxShadow = '0 8px 16px rgba(255, 255, 255, 0.2)';\n            }}\n            onMouseOut={(e) => {\n              const target = e.currentTarget;\n              target.style.transform = 'translateY(0)';\n              target.style.boxShadow = 'none';\n            }}\n          >\n            {thumbnailUrl && (\n              <img\n                src={thumbnailUrl}\n                alt={story.title || 'Story image'}\n                style={{\n                  width: '100%',\n                  height: '200px',\n                  objectFit: 'cover',\n                }}\n                onError={(e) => {\n                  // If image fails to load, replace with a placeholder\n                  e.currentTarget.src = 'https://via.placeholder.com/400x200?text=No+Image';\n                }}\n              />\n            )}\n            <h3 style={{\n              margin: '1rem',\n              color: '#fff',\n              fontSize: '1.2rem',\n              fontWeight: 'bold',\n              textShadow: '0 0 10px rgba(255, 255, 255, 0.5)',\n            }}>\n              {story.title || 'Untitled Story'}\n            </h3>\n            {story.createdAt && (\n              <p style={{\n                margin: '0 1rem 1rem',\n                color: 'rgba(255, 255, 255, 0.7)',\n                fontSize: '0.9rem',\n              }}>\n                {new Date(story.createdAt).toLocaleDateString()}\n              </p>\n            )}\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default StoryGrid; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}