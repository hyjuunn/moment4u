{"ast":null,"code":"var _jsxFileName = \"/Users/hyunjunekim/Documents/GitHub/moment4u/src/pages/CreateDiaryPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport '../styles/global.css';\nimport { useNavigate } from 'react-router-dom';\nimport StoryGrid from '../components/StoryGrid';\nimport DeleteConfirmModal from '../components/DeleteConfirmModal';\nimport SortDropdown from '../components/SortDropdown';\nimport { uploadImages, getAllStories, deleteStory, getImages, analyzeImagesSequentially, generateStory, createStory } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateDiaryPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [showPopup, setShowPopup] = useState(false);\n  const [isFading, setIsFading] = useState(false);\n  const [stories, setStories] = useState([]);\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const [combinedDescription, setCombinedDescription] = useState('');\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [isGeneratingStory, setIsGeneratingStory] = useState(false);\n  const [generatedStory, setGeneratedStory] = useState(null);\n  const fileInputRef = useRef(null);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [selectedStories, setSelectedStories] = useState(new Set());\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [sortBy, setSortBy] = useState('date-desc');\n  const sortOptions = [{\n    label: 'Newest',\n    value: 'date-desc'\n  }, {\n    label: 'Oldest',\n    value: 'date-asc'\n  }, {\n    label: 'A-Z',\n    value: 'title-asc'\n  }, {\n    label: 'Z-A',\n    value: 'title-desc'\n  }];\n  const sortedStories = useMemo(() => {\n    const sorted = [...stories];\n    switch (sortBy) {\n      case 'date-desc':\n        return sorted.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n      case 'date-asc':\n        return sorted.sort((a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime());\n      case 'title-asc':\n        return sorted.sort((a, b) => (a.title || '').localeCompare(b.title || ''));\n      case 'title-desc':\n        return sorted.sort((a, b) => (b.title || '').localeCompare(a.title || ''));\n      default:\n        return sorted;\n    }\n  }, [stories, sortBy]);\n  useEffect(() => {\n    fetchStories();\n    fetchImages();\n  }, []);\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  const fetchStories = async () => {\n    try {\n      const fetchedStories = await getAllStories();\n      setStories(fetchedStories);\n    } catch (error) {\n      console.error('Failed to fetch stories:', error);\n    }\n  };\n  const fetchImages = async () => {\n    try {\n      const images = await getImages();\n      setUploadedImages(images);\n      console.log('Fetched images:', images);\n    } catch (error) {\n      console.error('Failed to fetch images:', error);\n    }\n  };\n  useEffect(() => {\n    let fadeTimer;\n    let hideTimer;\n    if (showPopup) {\n      // Start fade out after 1.7 seconds\n      fadeTimer = setTimeout(() => {\n        setIsFading(true);\n      }, 1700);\n\n      // Hide popup after fade out animation (2 seconds + 0.3 seconds for fade out)\n      hideTimer = setTimeout(() => {\n        setShowPopup(false);\n        setIsFading(false);\n      }, 2000);\n    }\n    return () => {\n      clearTimeout(fadeTimer);\n      clearTimeout(hideTimer);\n    };\n  }, [showPopup]);\n  const handleCreateStory = () => {\n    var _fileInputRef$current;\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n  const handleFileSelect = async event => {\n    const files = event.target.files;\n    if (!files || files.length === 0) return;\n    try {\n      setIsUploading(true);\n      const uploadedImages = await uploadImages(Array.from(files));\n      console.log('Successfully uploaded images:', uploadedImages);\n      setUploadedImages(uploadedImages);\n\n      // Start analyzing images\n      setIsAnalyzing(true);\n      const description = await analyzeImagesSequentially(uploadedImages);\n      setCombinedDescription(description);\n      setIsAnalyzing(false);\n\n      // Generate story\n      setIsGeneratingStory(true);\n      const storyResult = await generateStory(description);\n      setGeneratedStory(storyResult);\n      setIsGeneratingStory(false);\n\n      // Save the story\n      if (storyResult.title && storyResult.story && uploadedImages.length > 0) {\n        const imageUrls = uploadedImages.map(img => img.image_path);\n        const storyId = uploadedImages[0].story_id;\n        await createStory(storyResult.title, storyResult.story, imageUrls, storyId);\n        console.log('Story saved successfully!');\n\n        // Refresh the stories list after successful creation\n        await fetchStories();\n      }\n    } catch (error) {\n      console.error('Failed to generate story:', error);\n      // Handle error appropriately\n    } finally {\n      setIsUploading(false);\n      if (event.target) {\n        event.target.value = ''; // Reset file input\n      }\n    }\n  };\n  const handleStorySelect = storyId => {\n    setSelectedStories(prev => {\n      const newSelected = new Set(prev);\n      if (newSelected.has(storyId)) {\n        newSelected.delete(storyId);\n      } else {\n        newSelected.add(storyId);\n      }\n      return newSelected;\n    });\n  };\n  const handleDeleteClick = async () => {\n    if (isDeleteMode) {\n      // If already in delete mode, check if there are stories to delete\n      if (selectedStories.size > 0) {\n        setShowDeleteConfirm(true);\n      } else {\n        // If no stories selected, just exit delete mode\n        setIsDeleteMode(false);\n      }\n    } else {\n      // Enter delete mode\n      setIsDeleteMode(true);\n      setSelectedStories(new Set());\n    }\n  };\n  const handleConfirmDelete = async () => {\n    try {\n      // Create an array to track failed deletions\n      const failedDeletions = [];\n\n      // Log the stories we're about to delete\n      console.log('Selected stories for deletion:', Array.from(selectedStories));\n      console.log('Current stories:', stories);\n\n      // Delete stories one by one to handle errors individually\n      for (const storyId of Array.from(selectedStories)) {\n        try {\n          console.log('Attempting to delete story with ID:', storyId);\n          await deleteStory(storyId);\n          console.log('Successfully deleted story from API:', storyId);\n\n          // Update stories list immediately after successful deletion\n          setStories(prev => {\n            console.log('Updating stories list after deletion. Current:', prev);\n            const updated = prev.filter(story => story.id !== storyId);\n            console.log('Updated stories list:', updated);\n            return updated;\n          });\n        } catch (error) {\n          console.error(`Failed to delete story ${storyId}:`, error);\n          failedDeletions.push(storyId);\n        }\n      }\n\n      // Show error message if any deletions failed\n      if (failedDeletions.length > 0) {\n        alert(`Failed to delete ${failedDeletions.length} stories. Please try again later.`);\n      }\n\n      // Refresh the stories list from the server\n      await fetchStories();\n    } catch (error) {\n      console.error('Error in delete operation:', error);\n      alert('An error occurred while deleting stories. Please try again.');\n    }\n\n    // Clear selected stories and exit delete mode\n    setSelectedStories(new Set());\n    setIsDeleteMode(false);\n    setShowDeleteConfirm(false);\n  };\n  const handleCancelDelete = () => {\n    setShowDeleteConfirm(false);\n  };\n  const renderDescription = () => {\n    if (isAnalyzing) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Analyzing images...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 14\n      }, this);\n    }\n    if (isGeneratingStory) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generating story...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 14\n      }, this);\n    }\n    return null; // Don't render anything after generation is complete\n  };\n  const isSmallScreen = windowWidth < 768;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      href: \"https://fonts.googleapis.com/css2?family=Quicksand:wght@500&display=swap\",\n      rel: \"stylesheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '2rem',\n        minHeight: '100vh',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: '2.8rem',\n          marginBottom: '2rem',\n          fontFamily: 'Playfair Display, serif',\n          fontWeight: '600',\n          letterSpacing: '0.02em',\n          color: '#FFB6C1',\n          textAlign: 'center',\n          textShadow: '0 0 15px rgba(255, 182, 193, 0.5)'\n        },\n        children: \"Story Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '1rem',\n          marginBottom: isSmallScreen ? '0.5rem' : '1rem',\n          justifyContent: 'center',\n          flexWrap: isSmallScreen ? 'wrap' : 'nowrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          style: {\n            padding: '0.8em 2em',\n            fontSize: '1.1rem',\n            fontFamily: 'Poppins, sans-serif',\n            fontWeight: '500',\n            letterSpacing: '0.05em',\n            backgroundColor: '#87CEEB',\n            color: '#121212',\n            border: 'none',\n            borderRadius: '50px',\n            cursor: 'pointer',\n            transition: 'all 0.3s ease',\n            textTransform: 'uppercase'\n          },\n          onMouseOver: e => {\n            e.currentTarget.style.transform = 'translateY(-2px)';\n            e.currentTarget.style.boxShadow = '0 5px 15px rgba(135, 206, 235, 0.4)';\n          },\n          onMouseOut: e => {\n            e.currentTarget.style.transform = 'translateY(0)';\n            e.currentTarget.style.boxShadow = 'none';\n          },\n          children: \"Back to Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateStory,\n          style: {\n            padding: '0.8em 2em',\n            fontSize: '1.1rem',\n            fontFamily: 'Poppins, sans-serif',\n            fontWeight: '500',\n            letterSpacing: '0.05em',\n            backgroundColor: '#FFB6C1',\n            color: '#121212',\n            border: 'none',\n            borderRadius: '50px',\n            cursor: 'pointer',\n            transition: 'all 0.3s ease',\n            textTransform: 'uppercase'\n          },\n          onMouseOver: e => {\n            e.currentTarget.style.transform = 'translateY(-2px)';\n            e.currentTarget.style.boxShadow = '0 5px 15px rgba(255, 182, 193, 0.4)';\n          },\n          onMouseOut: e => {\n            e.currentTarget.style.transform = 'translateY(0)';\n            e.currentTarget.style.boxShadow = 'none';\n          },\n          children: \"Create Story\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteClick,\n          style: {\n            padding: '0.8em 2em',\n            fontSize: '1.1rem',\n            fontFamily: 'Poppins, sans-serif',\n            fontWeight: '500',\n            letterSpacing: '0.05em',\n            backgroundColor: isDeleteMode ? '#ff4444' : '#87CEEB',\n            color: '#121212',\n            border: 'none',\n            borderRadius: '50px',\n            cursor: 'pointer',\n            transition: 'all 0.3s ease',\n            textTransform: 'uppercase'\n          },\n          onMouseOver: e => {\n            e.currentTarget.style.transform = 'translateY(-2px)';\n            e.currentTarget.style.boxShadow = `0 5px 15px ${isDeleteMode ? 'rgba(255, 68, 68, 0.4)' : 'rgba(135, 206, 235, 0.4)'}`;\n          },\n          onMouseOut: e => {\n            e.currentTarget.style.transform = 'translateY(0)';\n            e.currentTarget.style.boxShadow = 'none';\n          },\n          children: isDeleteMode ? 'Finish Delete' : 'Delete Stories'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...(isSmallScreen ? {\n            display: 'flex',\n            justifyContent: 'center',\n            marginBottom: '1rem',\n            width: '100%'\n          } : {\n            position: 'absolute',\n            right: '2rem',\n            top: '11rem'\n          }),\n          opacity: 0.7,\n          zIndex: 1000\n        },\n        children: /*#__PURE__*/_jsxDEV(SortDropdown, {\n          options: sortOptions,\n          value: sortBy,\n          onChange: setSortBy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), isUploading && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontFamily: 'Poppins, sans-serif',\n          fontSize: '1.1rem',\n          color: '#87CEEB',\n          textAlign: 'center',\n          margin: '1rem 0'\n        },\n        children: \"Uploading images...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        multiple: true,\n        onChange: handleFileSelect,\n        style: {\n          display: 'none'\n        },\n        ref: fileInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), renderDescription(), /*#__PURE__*/_jsxDEV(StoryGrid, {\n        stories: sortedStories,\n        isDeleteMode: isDeleteMode,\n        onStorySelect: handleStorySelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), showDeleteConfirm && /*#__PURE__*/_jsxDEV(DeleteConfirmModal, {\n      count: selectedStories.size,\n      onConfirm: handleConfirmDelete,\n      onCancel: handleCancelDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(CreateDiaryPage, \"1zxnlE0QlROzCtu3F9THWL458to=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateDiaryPage;\nexport default CreateDiaryPage;\nvar _c;\n$RefreshReg$(_c, \"CreateDiaryPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","useNavigate","StoryGrid","DeleteConfirmModal","SortDropdown","uploadImages","getAllStories","deleteStory","getImages","analyzeImagesSequentially","generateStory","createStory","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateDiaryPage","_s","navigate","showPopup","setShowPopup","isFading","setIsFading","stories","setStories","isUploading","setIsUploading","uploadedImages","setUploadedImages","combinedDescription","setCombinedDescription","isAnalyzing","setIsAnalyzing","isGeneratingStory","setIsGeneratingStory","generatedStory","setGeneratedStory","fileInputRef","isDeleteMode","setIsDeleteMode","selectedStories","setSelectedStories","Set","windowWidth","setWindowWidth","window","innerWidth","showDeleteConfirm","setShowDeleteConfirm","sortBy","setSortBy","sortOptions","label","value","sortedStories","sorted","sort","a","b","Date","createdAt","getTime","title","localeCompare","fetchStories","fetchImages","handleResize","addEventListener","removeEventListener","fetchedStories","error","console","images","log","fadeTimer","hideTimer","setTimeout","clearTimeout","handleCreateStory","_fileInputRef$current","current","click","handleFileSelect","event","files","target","length","Array","from","description","storyResult","story","imageUrls","map","img","image_path","storyId","story_id","handleStorySelect","prev","newSelected","has","delete","add","handleDeleteClick","size","handleConfirmDelete","failedDeletions","updated","filter","id","push","alert","handleCancelDelete","renderDescription","children","fileName","_jsxFileName","lineNumber","columnNumber","isSmallScreen","href","rel","style","display","flexDirection","alignItems","padding","minHeight","position","fontSize","marginBottom","fontFamily","fontWeight","letterSpacing","color","textAlign","textShadow","gap","justifyContent","flexWrap","onClick","backgroundColor","border","borderRadius","cursor","transition","textTransform","onMouseOver","e","currentTarget","transform","boxShadow","onMouseOut","width","right","top","opacity","zIndex","options","onChange","margin","type","accept","multiple","ref","onStorySelect","count","onConfirm","onCancel","_c","$RefreshReg$"],"sources":["/Users/hyunjunekim/Documents/GitHub/moment4u/src/pages/CreateDiaryPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport '../styles/global.css';\nimport { useNavigate } from 'react-router-dom';\nimport StoryGrid from '../components/StoryGrid';\nimport DeleteConfirmModal from '../components/DeleteConfirmModal';\nimport SortDropdown from '../components/SortDropdown';\nimport { \n  uploadImages, \n  getAllStories, \n  deleteStory, \n  Story, \n  ImageResponse, \n  getImages, \n  analyzeImagesSequentially,\n  generateStory,\n  StoryGenerationResponse,\n  createStory \n} from '../services/api';\n\nconst CreateDiaryPage: React.FC = () => {\n  const navigate = useNavigate();\n  const [showPopup, setShowPopup] = useState(false);\n  const [isFading, setIsFading] = useState(false);\n  const [stories, setStories] = useState<Story[]>([]);\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadedImages, setUploadedImages] = useState<ImageResponse[]>([]);\n  const [combinedDescription, setCombinedDescription] = useState<string>('');\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [isGeneratingStory, setIsGeneratingStory] = useState(false);\n  const [generatedStory, setGeneratedStory] = useState<StoryGenerationResponse | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [selectedStories, setSelectedStories] = useState<Set<string>>(new Set());\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [sortBy, setSortBy] = useState('date-desc');\n\n  const sortOptions = [\n    { label: 'Newest', value: 'date-desc' },\n    { label: 'Oldest', value: 'date-asc' },\n    { label: 'A-Z', value: 'title-asc' },\n    { label: 'Z-A', value: 'title-desc' },\n  ];\n\n  const sortedStories = useMemo(() => {\n    const sorted = [...stories];\n    switch (sortBy) {\n      case 'date-desc':\n        return sorted.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n      case 'date-asc':\n        return sorted.sort((a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime());\n      case 'title-asc':\n        return sorted.sort((a, b) => (a.title || '').localeCompare(b.title || ''));\n      case 'title-desc':\n        return sorted.sort((a, b) => (b.title || '').localeCompare(a.title || ''));\n      default:\n        return sorted;\n    }\n  }, [stories, sortBy]);\n\n  useEffect(() => {\n    fetchStories();\n    fetchImages();\n  }, []);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const fetchStories = async () => {\n    try {\n      const fetchedStories = await getAllStories();\n      setStories(fetchedStories);\n    } catch (error) {\n      console.error('Failed to fetch stories:', error);\n    }\n  };\n\n  const fetchImages = async () => {\n    try {\n      const images = await getImages();\n      setUploadedImages(images);\n      console.log('Fetched images:', images);\n    } catch (error) {\n      console.error('Failed to fetch images:', error);\n    }\n  };\n\n  useEffect(() => {\n    let fadeTimer: NodeJS.Timeout;\n    let hideTimer: NodeJS.Timeout;\n    \n    if (showPopup) {\n      // Start fade out after 1.7 seconds\n      fadeTimer = setTimeout(() => {\n        setIsFading(true);\n      }, 1700);\n\n      // Hide popup after fade out animation (2 seconds + 0.3 seconds for fade out)\n      hideTimer = setTimeout(() => {\n        setShowPopup(false);\n        setIsFading(false);\n      }, 2000);\n    }\n\n    return () => {\n      clearTimeout(fadeTimer);\n      clearTimeout(hideTimer);\n    };\n  }, [showPopup]);\n\n  const handleCreateStory = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files;\n    if (!files || files.length === 0) return;\n\n    try {\n      setIsUploading(true);\n      const uploadedImages = await uploadImages(Array.from(files));\n      console.log('Successfully uploaded images:', uploadedImages);\n      setUploadedImages(uploadedImages);\n\n      // Start analyzing images\n      setIsAnalyzing(true);\n      const description = await analyzeImagesSequentially(uploadedImages);\n      setCombinedDescription(description);\n      setIsAnalyzing(false);\n\n      // Generate story\n      setIsGeneratingStory(true);\n      const storyResult = await generateStory(description);\n      setGeneratedStory(storyResult);\n      setIsGeneratingStory(false);\n\n      // Save the story\n      if (storyResult.title && storyResult.story && uploadedImages.length > 0) {\n        const imageUrls = uploadedImages.map(img => img.image_path);\n        const storyId = uploadedImages[0].story_id;\n        await createStory(storyResult.title, storyResult.story, imageUrls, storyId);\n        console.log('Story saved successfully!');\n        \n        // Refresh the stories list after successful creation\n        await fetchStories();\n      }\n    } catch (error) {\n      console.error('Failed to generate story:', error);\n      // Handle error appropriately\n    } finally {\n      setIsUploading(false);\n      if (event.target) {\n        event.target.value = ''; // Reset file input\n      }\n    }\n  };\n\n  const handleStorySelect = (storyId: string) => {\n    setSelectedStories(prev => {\n      const newSelected = new Set(prev);\n      if (newSelected.has(storyId)) {\n        newSelected.delete(storyId);\n      } else {\n        newSelected.add(storyId);\n      }\n      return newSelected;\n    });\n  };\n\n  const handleDeleteClick = async () => {\n    if (isDeleteMode) {\n      // If already in delete mode, check if there are stories to delete\n      if (selectedStories.size > 0) {\n        setShowDeleteConfirm(true);\n      } else {\n        // If no stories selected, just exit delete mode\n        setIsDeleteMode(false);\n      }\n    } else {\n      // Enter delete mode\n      setIsDeleteMode(true);\n      setSelectedStories(new Set());\n    }\n  };\n\n  const handleConfirmDelete = async () => {\n    try {\n      // Create an array to track failed deletions\n      const failedDeletions: string[] = [];\n      \n      // Log the stories we're about to delete\n      console.log('Selected stories for deletion:', Array.from(selectedStories));\n      console.log('Current stories:', stories);\n      \n      // Delete stories one by one to handle errors individually\n      for (const storyId of Array.from(selectedStories)) {\n        try {\n          console.log('Attempting to delete story with ID:', storyId);\n          await deleteStory(storyId);\n          console.log('Successfully deleted story from API:', storyId);\n          \n          // Update stories list immediately after successful deletion\n          setStories(prev => {\n            console.log('Updating stories list after deletion. Current:', prev);\n            const updated = prev.filter(story => story.id !== storyId);\n            console.log('Updated stories list:', updated);\n            return updated;\n          });\n        } catch (error) {\n          console.error(`Failed to delete story ${storyId}:`, error);\n          failedDeletions.push(storyId);\n        }\n      }\n      \n      // Show error message if any deletions failed\n      if (failedDeletions.length > 0) {\n        alert(`Failed to delete ${failedDeletions.length} stories. Please try again later.`);\n      }\n      \n      // Refresh the stories list from the server\n      await fetchStories();\n    } catch (error) {\n      console.error('Error in delete operation:', error);\n      alert('An error occurred while deleting stories. Please try again.');\n    }\n\n    // Clear selected stories and exit delete mode\n    setSelectedStories(new Set());\n    setIsDeleteMode(false);\n    setShowDeleteConfirm(false);\n  };\n\n  const handleCancelDelete = () => {\n    setShowDeleteConfirm(false);\n  };\n\n  const renderDescription = () => {\n    if (isAnalyzing) {\n      return <p>Analyzing images...</p>;\n    }\n    if (isGeneratingStory) {\n      return <p>Generating story...</p>;\n    }\n    return null;  // Don't render anything after generation is complete\n  };\n\n  const isSmallScreen = windowWidth < 768;\n\n  return (\n    <>\n      <link href=\"https://fonts.googleapis.com/css2?family=Quicksand:wght@500&display=swap\" rel=\"stylesheet\" />\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '2rem',\n        minHeight: '100vh',\n        position: 'relative'\n      }}>\n        <h1 style={{\n          fontSize: '2.8rem',\n          marginBottom: '2rem',\n          fontFamily: 'Playfair Display, serif',\n          fontWeight: '600',\n          letterSpacing: '0.02em',\n          color: '#FFB6C1',\n          textAlign: 'center',\n          textShadow: '0 0 15px rgba(255, 182, 193, 0.5)'\n        }}>\n          Story Dashboard\n        </h1>\n\n        <div style={{\n          display: 'flex',\n          gap: '1rem',\n          marginBottom: isSmallScreen ? '0.5rem' : '1rem',\n          justifyContent: 'center',\n          flexWrap: isSmallScreen ? 'wrap' : 'nowrap'\n        }}>\n          <button\n            onClick={() => navigate('/')}\n            style={{\n              padding: '0.8em 2em',\n              fontSize: '1.1rem',\n              fontFamily: 'Poppins, sans-serif',\n              fontWeight: '500',\n              letterSpacing: '0.05em',\n              backgroundColor: '#87CEEB',\n              color: '#121212',\n              border: 'none',\n              borderRadius: '50px',\n              cursor: 'pointer',\n              transition: 'all 0.3s ease',\n              textTransform: 'uppercase'\n            }}\n            onMouseOver={(e) => {\n              e.currentTarget.style.transform = 'translateY(-2px)';\n              e.currentTarget.style.boxShadow = '0 5px 15px rgba(135, 206, 235, 0.4)';\n            }}\n            onMouseOut={(e) => {\n              e.currentTarget.style.transform = 'translateY(0)';\n              e.currentTarget.style.boxShadow = 'none';\n            }}\n          >\n            Back to Main\n          </button>\n\n          <button\n            onClick={handleCreateStory}\n            style={{\n              padding: '0.8em 2em',\n              fontSize: '1.1rem',\n              fontFamily: 'Poppins, sans-serif',\n              fontWeight: '500',\n              letterSpacing: '0.05em',\n              backgroundColor: '#FFB6C1',\n              color: '#121212',\n              border: 'none',\n              borderRadius: '50px',\n              cursor: 'pointer',\n              transition: 'all 0.3s ease',\n              textTransform: 'uppercase'\n            }}\n            onMouseOver={(e) => {\n              e.currentTarget.style.transform = 'translateY(-2px)';\n              e.currentTarget.style.boxShadow = '0 5px 15px rgba(255, 182, 193, 0.4)';\n            }}\n            onMouseOut={(e) => {\n              e.currentTarget.style.transform = 'translateY(0)';\n              e.currentTarget.style.boxShadow = 'none';\n            }}\n          >\n            Create Story\n          </button>\n\n          <button\n            onClick={handleDeleteClick}\n            style={{\n              padding: '0.8em 2em',\n              fontSize: '1.1rem',\n              fontFamily: 'Poppins, sans-serif',\n              fontWeight: '500',\n              letterSpacing: '0.05em',\n              backgroundColor: isDeleteMode ? '#ff4444' : '#87CEEB',\n              color: '#121212',\n              border: 'none',\n              borderRadius: '50px',\n              cursor: 'pointer',\n              transition: 'all 0.3s ease',\n              textTransform: 'uppercase'\n            }}\n            onMouseOver={(e) => {\n              e.currentTarget.style.transform = 'translateY(-2px)';\n              e.currentTarget.style.boxShadow = `0 5px 15px ${isDeleteMode ? 'rgba(255, 68, 68, 0.4)' : 'rgba(135, 206, 235, 0.4)'}`;\n            }}\n            onMouseOut={(e) => {\n              e.currentTarget.style.transform = 'translateY(0)';\n              e.currentTarget.style.boxShadow = 'none';\n            }}\n          >\n            {isDeleteMode ? 'Finish Delete' : 'Delete Stories'}\n          </button>\n        </div>\n\n        <div style={{\n          ...(isSmallScreen ? {\n            display: 'flex',\n            justifyContent: 'center',\n            marginBottom: '1rem',\n            width: '100%'\n          } : {\n            position: 'absolute',\n            right: '2rem',\n            top: '11rem',\n          }),\n          opacity: 0.7,\n          zIndex: 1000\n        }}>\n          <SortDropdown\n            options={sortOptions}\n            value={sortBy}\n            onChange={setSortBy}\n          />\n        </div>\n\n        {isUploading && (\n          <p style={{\n            fontFamily: 'Poppins, sans-serif',\n            fontSize: '1.1rem',\n            color: '#87CEEB',\n            textAlign: 'center',\n            margin: '1rem 0'\n          }}>\n            Uploading images...\n          </p>\n        )}\n\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          multiple\n          onChange={handleFileSelect}\n          style={{ display: 'none' }}\n          ref={fileInputRef}\n        />\n\n        {renderDescription()}\n        \n        <StoryGrid\n          stories={sortedStories}\n          isDeleteMode={isDeleteMode}\n          onStorySelect={handleStorySelect}\n        />\n      </div>\n\n      {showDeleteConfirm && (\n        <DeleteConfirmModal\n          count={selectedStories.size}\n          onConfirm={handleConfirmDelete}\n          onCancel={handleCancelDelete}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CreateDiaryPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}