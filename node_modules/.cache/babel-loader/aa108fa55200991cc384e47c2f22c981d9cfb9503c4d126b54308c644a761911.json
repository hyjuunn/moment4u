{"ast":null,"code":"var _jsxFileName = \"/Users/hyunjunekim/Documents/GitHub/moment4u/src/pages/CreateDiaryPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../styles/global.css';\nimport { useNavigate } from 'react-router-dom';\nimport StoryGrid from '../components/StoryGrid';\nimport { uploadImages, getAllStories, deleteStory, getImages, analyzeImagesSequentially, generateStory, createStory } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateDiaryPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [showPopup, setShowPopup] = useState(false);\n  const [isFading, setIsFading] = useState(false);\n  const [stories, setStories] = useState([]);\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const [combinedDescription, setCombinedDescription] = useState('');\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [isGeneratingStory, setIsGeneratingStory] = useState(false);\n  const [generatedStory, setGeneratedStory] = useState(null);\n  const fileInputRef = useRef(null);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [selectedStories, setSelectedStories] = useState(new Set());\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    fetchStories();\n    fetchImages();\n  }, []);\n  useEffect(() => {\n    const handleResize = () => {\n      // Force a re-render on resize/zoom\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  const fetchStories = async () => {\n    try {\n      const fetchedStories = await getAllStories();\n      setStories(fetchedStories);\n    } catch (error) {\n      console.error('Failed to fetch stories:', error);\n    }\n  };\n  const fetchImages = async () => {\n    try {\n      const images = await getImages();\n      setUploadedImages(images);\n      console.log('Fetched images:', images);\n    } catch (error) {\n      console.error('Failed to fetch images:', error);\n    }\n  };\n  useEffect(() => {\n    let fadeTimer;\n    let hideTimer;\n    if (showPopup) {\n      // Start fade out after 1.7 seconds\n      fadeTimer = setTimeout(() => {\n        setIsFading(true);\n      }, 1700);\n\n      // Hide popup after fade out animation (2 seconds + 0.3 seconds for fade out)\n      hideTimer = setTimeout(() => {\n        setShowPopup(false);\n        setIsFading(false);\n      }, 2000);\n    }\n    return () => {\n      clearTimeout(fadeTimer);\n      clearTimeout(hideTimer);\n    };\n  }, [showPopup]);\n  const handleCreateStory = () => {\n    var _fileInputRef$current;\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n  const handleFileSelect = async event => {\n    const files = event.target.files;\n    if (!files || files.length === 0) return;\n    try {\n      setIsUploading(true);\n      const uploadedImages = await uploadImages(Array.from(files));\n      console.log('Successfully uploaded images:', uploadedImages);\n      setUploadedImages(uploadedImages);\n\n      // Start analyzing images\n      setIsAnalyzing(true);\n      const description = await analyzeImagesSequentially(uploadedImages);\n      setCombinedDescription(description);\n      setIsAnalyzing(false);\n\n      // Generate story\n      setIsGeneratingStory(true);\n      const storyResult = await generateStory(description);\n      setGeneratedStory(storyResult);\n      setIsGeneratingStory(false);\n\n      // Save the story\n      if (storyResult.title && storyResult.story && uploadedImages.length > 0) {\n        const imageUrls = uploadedImages.map(img => img.image_path);\n        const storyId = uploadedImages[0].story_id;\n        await createStory(storyResult.title, storyResult.story, imageUrls, storyId);\n        console.log('Story saved successfully!');\n\n        // Refresh the stories list after successful creation\n        await fetchStories();\n      }\n    } catch (error) {\n      console.error('Failed to generate story:', error);\n      // Handle error appropriately\n    } finally {\n      setIsUploading(false);\n      if (event.target) {\n        event.target.value = ''; // Reset file input\n      }\n    }\n  };\n  const handleStorySelect = storyId => {\n    setSelectedStories(prev => {\n      const newSelected = new Set(prev);\n      if (newSelected.has(storyId)) {\n        newSelected.delete(storyId);\n      } else {\n        newSelected.add(storyId);\n      }\n      return newSelected;\n    });\n  };\n  const handleDeleteClick = async () => {\n    if (isDeleteMode) {\n      // If already in delete mode, perform deletion\n      if (selectedStories.size > 0) {\n        const confirmDelete = window.confirm(`Are you sure you want to delete ${selectedStories.size} selected ${selectedStories.size === 1 ? 'story' : 'stories'}?`);\n        if (confirmDelete) {\n          try {\n            // Create an array to track failed deletions\n            const failedDeletions = [];\n\n            // Log the stories we're about to delete\n            console.log('Selected stories for deletion:', Array.from(selectedStories));\n            console.log('Current stories:', stories);\n\n            // Delete stories one by one to handle errors individually\n            for (const storyId of Array.from(selectedStories)) {\n              try {\n                console.log('Attempting to delete story with ID:', storyId);\n                await deleteStory(storyId);\n                console.log('Successfully deleted story from API:', storyId);\n\n                // Update stories list immediately after successful deletion\n                setStories(prev => {\n                  console.log('Updating stories list after deletion. Current:', prev);\n                  const updated = prev.filter(story => story.id !== storyId);\n                  console.log('Updated stories list:', updated);\n                  return updated;\n                });\n              } catch (error) {\n                console.error(`Failed to delete story ${storyId}:`, error);\n                failedDeletions.push(storyId);\n              }\n            }\n\n            // Clear selected stories regardless of success/failure\n            setSelectedStories(new Set());\n\n            // Show error message if any deletions failed\n            if (failedDeletions.length > 0) {\n              alert(`Failed to delete ${failedDeletions.length} stories. Please try again later.`);\n            }\n\n            // Refresh the stories list from the server\n            await fetchStories();\n          } catch (error) {\n            console.error('Error in delete operation:', error);\n            alert('An error occurred while deleting stories. Please try again.');\n          }\n        }\n      }\n      setIsDeleteMode(false);\n    } else {\n      // Enter delete mode\n      setIsDeleteMode(true);\n      setSelectedStories(new Set());\n    }\n  };\n  const renderDescription = () => {\n    if (isAnalyzing) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Analyzing images...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 14\n      }, this);\n    }\n    if (isGeneratingStory) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generating story...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 14\n      }, this);\n    }\n    return null; // Don't render anything after generation is complete\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      href: \"https://fonts.googleapis.com/css2?family=Quicksand:wght@500&display=swap\",\n      rel: \"stylesheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '2rem',\n        minHeight: '100vh',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: '2.8rem',\n          marginBottom: '2rem',\n          fontFamily: 'Playfair Display, serif',\n          fontWeight: '600',\n          letterSpacing: '0.02em',\n          color: '#FFB6C1',\n          textAlign: 'center',\n          textShadow: '0 0 15px rgba(255, 182, 193, 0.5)'\n        },\n        children: \"Story Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '1rem',\n          marginBottom: '2rem',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateStory,\n          style: {\n            padding: '0.8em 2em',\n            fontSize: '1.1rem',\n            fontFamily: 'Poppins, sans-serif',\n            fontWeight: '500',\n            letterSpacing: '0.05em',\n            backgroundColor: '#FFB6C1',\n            color: '#121212',\n            border: 'none',\n            borderRadius: '50px',\n            cursor: 'pointer',\n            transition: 'all 0.3s ease',\n            textTransform: 'uppercase'\n          },\n          onMouseOver: e => {\n            e.currentTarget.style.transform = 'translateY(-2px)';\n            e.currentTarget.style.boxShadow = '0 5px 15px rgba(255, 182, 193, 0.4)';\n          },\n          onMouseOut: e => {\n            e.currentTarget.style.transform = 'translateY(0)';\n            e.currentTarget.style.boxShadow = 'none';\n          },\n          children: \"Create Story\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteClick,\n          style: {\n            padding: '0.8em 2em',\n            fontSize: '1.1rem',\n            fontFamily: 'Poppins, sans-serif',\n            fontWeight: '500',\n            letterSpacing: '0.05em',\n            backgroundColor: isDeleteMode ? '#ff4444' : '#87CEEB',\n            color: '#121212',\n            border: 'none',\n            borderRadius: '50px',\n            cursor: 'pointer',\n            transition: 'all 0.3s ease',\n            textTransform: 'uppercase'\n          },\n          onMouseOver: e => {\n            e.currentTarget.style.transform = 'translateY(-2px)';\n            e.currentTarget.style.boxShadow = `0 5px 15px ${isDeleteMode ? 'rgba(255, 68, 68, 0.4)' : 'rgba(135, 206, 235, 0.4)'}`;\n          },\n          onMouseOut: e => {\n            e.currentTarget.style.transform = 'translateY(0)';\n            e.currentTarget.style.boxShadow = 'none';\n          },\n          children: isDeleteMode ? 'Finish Delete' : 'Delete Stories'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), isUploading && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontFamily: 'Poppins, sans-serif',\n          fontSize: '1.1rem',\n          color: '#87CEEB',\n          textAlign: 'center',\n          margin: '1rem 0'\n        },\n        children: \"Uploading images...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        multiple: true,\n        onChange: handleFileSelect,\n        style: {\n          display: 'none'\n        },\n        ref: fileInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), renderDescription(), /*#__PURE__*/_jsxDEV(StoryGrid, {\n        stories: stories,\n        isDeleteMode: isDeleteMode,\n        onStorySelect: handleStorySelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CreateDiaryPage, \"HDzVcVOO8HLacQOTtNZXP675HEI=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateDiaryPage;\nexport default CreateDiaryPage;\nvar _c;\n$RefreshReg$(_c, \"CreateDiaryPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","StoryGrid","uploadImages","getAllStories","deleteStory","getImages","analyzeImagesSequentially","generateStory","createStory","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateDiaryPage","_s","navigate","showPopup","setShowPopup","isFading","setIsFading","stories","setStories","isUploading","setIsUploading","uploadedImages","setUploadedImages","combinedDescription","setCombinedDescription","isAnalyzing","setIsAnalyzing","isGeneratingStory","setIsGeneratingStory","generatedStory","setGeneratedStory","fileInputRef","isDeleteMode","setIsDeleteMode","selectedStories","setSelectedStories","Set","windowWidth","setWindowWidth","window","innerWidth","fetchStories","fetchImages","handleResize","addEventListener","removeEventListener","fetchedStories","error","console","images","log","fadeTimer","hideTimer","setTimeout","clearTimeout","handleCreateStory","_fileInputRef$current","current","click","handleFileSelect","event","files","target","length","Array","from","description","storyResult","title","story","imageUrls","map","img","image_path","storyId","story_id","value","handleStorySelect","prev","newSelected","has","delete","add","handleDeleteClick","size","confirmDelete","confirm","failedDeletions","updated","filter","id","push","alert","renderDescription","children","fileName","_jsxFileName","lineNumber","columnNumber","href","rel","style","display","flexDirection","alignItems","padding","minHeight","position","fontSize","marginBottom","fontFamily","fontWeight","letterSpacing","color","textAlign","textShadow","gap","justifyContent","onClick","backgroundColor","border","borderRadius","cursor","transition","textTransform","onMouseOver","e","currentTarget","transform","boxShadow","onMouseOut","margin","type","accept","multiple","onChange","ref","onStorySelect","_c","$RefreshReg$"],"sources":["/Users/hyunjunekim/Documents/GitHub/moment4u/src/pages/CreateDiaryPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport '../styles/global.css';\nimport { useNavigate } from 'react-router-dom';\nimport StoryGrid from '../components/StoryGrid';\nimport { \n  uploadImages, \n  getAllStories, \n  deleteStory, \n  Story, \n  ImageResponse, \n  getImages, \n  analyzeImagesSequentially,\n  generateStory,\n  StoryGenerationResponse,\n  createStory \n} from '../services/api';\n\nconst CreateDiaryPage: React.FC = () => {\n  const navigate = useNavigate();\n  const [showPopup, setShowPopup] = useState(false);\n  const [isFading, setIsFading] = useState(false);\n  const [stories, setStories] = useState<Story[]>([]);\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadedImages, setUploadedImages] = useState<ImageResponse[]>([]);\n  const [combinedDescription, setCombinedDescription] = useState<string>('');\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [isGeneratingStory, setIsGeneratingStory] = useState(false);\n  const [generatedStory, setGeneratedStory] = useState<StoryGenerationResponse | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [selectedStories, setSelectedStories] = useState<Set<string>>(new Set());\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    fetchStories();\n    fetchImages();\n  }, []);\n\n  useEffect(() => {\n    const handleResize = () => {\n      // Force a re-render on resize/zoom\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const fetchStories = async () => {\n    try {\n      const fetchedStories = await getAllStories();\n      setStories(fetchedStories);\n    } catch (error) {\n      console.error('Failed to fetch stories:', error);\n    }\n  };\n\n  const fetchImages = async () => {\n    try {\n      const images = await getImages();\n      setUploadedImages(images);\n      console.log('Fetched images:', images);\n    } catch (error) {\n      console.error('Failed to fetch images:', error);\n    }\n  };\n\n  useEffect(() => {\n    let fadeTimer: NodeJS.Timeout;\n    let hideTimer: NodeJS.Timeout;\n    \n    if (showPopup) {\n      // Start fade out after 1.7 seconds\n      fadeTimer = setTimeout(() => {\n        setIsFading(true);\n      }, 1700);\n\n      // Hide popup after fade out animation (2 seconds + 0.3 seconds for fade out)\n      hideTimer = setTimeout(() => {\n        setShowPopup(false);\n        setIsFading(false);\n      }, 2000);\n    }\n\n    return () => {\n      clearTimeout(fadeTimer);\n      clearTimeout(hideTimer);\n    };\n  }, [showPopup]);\n\n  const handleCreateStory = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files;\n    if (!files || files.length === 0) return;\n\n    try {\n      setIsUploading(true);\n      const uploadedImages = await uploadImages(Array.from(files));\n      console.log('Successfully uploaded images:', uploadedImages);\n      setUploadedImages(uploadedImages);\n\n      // Start analyzing images\n      setIsAnalyzing(true);\n      const description = await analyzeImagesSequentially(uploadedImages);\n      setCombinedDescription(description);\n      setIsAnalyzing(false);\n\n      // Generate story\n      setIsGeneratingStory(true);\n      const storyResult = await generateStory(description);\n      setGeneratedStory(storyResult);\n      setIsGeneratingStory(false);\n\n      // Save the story\n      if (storyResult.title && storyResult.story && uploadedImages.length > 0) {\n        const imageUrls = uploadedImages.map(img => img.image_path);\n        const storyId = uploadedImages[0].story_id;\n        await createStory(storyResult.title, storyResult.story, imageUrls, storyId);\n        console.log('Story saved successfully!');\n        \n        // Refresh the stories list after successful creation\n        await fetchStories();\n      }\n    } catch (error) {\n      console.error('Failed to generate story:', error);\n      // Handle error appropriately\n    } finally {\n      setIsUploading(false);\n      if (event.target) {\n        event.target.value = ''; // Reset file input\n      }\n    }\n  };\n\n  const handleStorySelect = (storyId: string) => {\n    setSelectedStories(prev => {\n      const newSelected = new Set(prev);\n      if (newSelected.has(storyId)) {\n        newSelected.delete(storyId);\n      } else {\n        newSelected.add(storyId);\n      }\n      return newSelected;\n    });\n  };\n\n  const handleDeleteClick = async () => {\n    if (isDeleteMode) {\n      // If already in delete mode, perform deletion\n      if (selectedStories.size > 0) {\n        const confirmDelete = window.confirm(\n          `Are you sure you want to delete ${selectedStories.size} selected ${\n            selectedStories.size === 1 ? 'story' : 'stories'\n          }?`\n        );\n        \n        if (confirmDelete) {\n          try {\n            // Create an array to track failed deletions\n            const failedDeletions: string[] = [];\n            \n            // Log the stories we're about to delete\n            console.log('Selected stories for deletion:', Array.from(selectedStories));\n            console.log('Current stories:', stories);\n            \n            // Delete stories one by one to handle errors individually\n            for (const storyId of Array.from(selectedStories)) {\n              try {\n                console.log('Attempting to delete story with ID:', storyId);\n                await deleteStory(storyId);\n                console.log('Successfully deleted story from API:', storyId);\n                \n                // Update stories list immediately after successful deletion\n                setStories(prev => {\n                  console.log('Updating stories list after deletion. Current:', prev);\n                  const updated = prev.filter(story => story.id !== storyId);\n                  console.log('Updated stories list:', updated);\n                  return updated;\n                });\n              } catch (error) {\n                console.error(`Failed to delete story ${storyId}:`, error);\n                failedDeletions.push(storyId);\n              }\n            }\n            \n            // Clear selected stories regardless of success/failure\n            setSelectedStories(new Set());\n            \n            // Show error message if any deletions failed\n            if (failedDeletions.length > 0) {\n              alert(`Failed to delete ${failedDeletions.length} stories. Please try again later.`);\n            }\n            \n            // Refresh the stories list from the server\n            await fetchStories();\n          } catch (error) {\n            console.error('Error in delete operation:', error);\n            alert('An error occurred while deleting stories. Please try again.');\n          }\n        }\n      }\n      setIsDeleteMode(false);\n    } else {\n      // Enter delete mode\n      setIsDeleteMode(true);\n      setSelectedStories(new Set());\n    }\n  };\n\n  const renderDescription = () => {\n    if (isAnalyzing) {\n      return <p>Analyzing images...</p>;\n    }\n    if (isGeneratingStory) {\n      return <p>Generating story...</p>;\n    }\n    return null;  // Don't render anything after generation is complete\n  };\n\n  return (\n    <>\n      <link href=\"https://fonts.googleapis.com/css2?family=Quicksand:wght@500&display=swap\" rel=\"stylesheet\" />\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '2rem',\n        minHeight: '100vh',\n        position: 'relative'\n      }}>\n        <h1 style={{\n          fontSize: '2.8rem',\n          marginBottom: '2rem',\n          fontFamily: 'Playfair Display, serif',\n          fontWeight: '600',\n          letterSpacing: '0.02em',\n          color: '#FFB6C1',\n          textAlign: 'center',\n          textShadow: '0 0 15px rgba(255, 182, 193, 0.5)'\n        }}>\n          Story Dashboard\n        </h1>\n\n        <div style={{\n          display: 'flex',\n          gap: '1rem',\n          marginBottom: '2rem',\n          justifyContent: 'center'\n        }}>\n          <button\n            onClick={handleCreateStory}\n            style={{\n              padding: '0.8em 2em',\n              fontSize: '1.1rem',\n              fontFamily: 'Poppins, sans-serif',\n              fontWeight: '500',\n              letterSpacing: '0.05em',\n              backgroundColor: '#FFB6C1',\n              color: '#121212',\n              border: 'none',\n              borderRadius: '50px',\n              cursor: 'pointer',\n              transition: 'all 0.3s ease',\n              textTransform: 'uppercase'\n            }}\n            onMouseOver={(e) => {\n              e.currentTarget.style.transform = 'translateY(-2px)';\n              e.currentTarget.style.boxShadow = '0 5px 15px rgba(255, 182, 193, 0.4)';\n            }}\n            onMouseOut={(e) => {\n              e.currentTarget.style.transform = 'translateY(0)';\n              e.currentTarget.style.boxShadow = 'none';\n            }}\n          >\n            Create Story\n          </button>\n\n          <button\n            onClick={handleDeleteClick}\n            style={{\n              padding: '0.8em 2em',\n              fontSize: '1.1rem',\n              fontFamily: 'Poppins, sans-serif',\n              fontWeight: '500',\n              letterSpacing: '0.05em',\n              backgroundColor: isDeleteMode ? '#ff4444' : '#87CEEB',\n              color: '#121212',\n              border: 'none',\n              borderRadius: '50px',\n              cursor: 'pointer',\n              transition: 'all 0.3s ease',\n              textTransform: 'uppercase'\n            }}\n            onMouseOver={(e) => {\n              e.currentTarget.style.transform = 'translateY(-2px)';\n              e.currentTarget.style.boxShadow = `0 5px 15px ${isDeleteMode ? 'rgba(255, 68, 68, 0.4)' : 'rgba(135, 206, 235, 0.4)'}`;\n            }}\n            onMouseOut={(e) => {\n              e.currentTarget.style.transform = 'translateY(0)';\n              e.currentTarget.style.boxShadow = 'none';\n            }}\n          >\n            {isDeleteMode ? 'Finish Delete' : 'Delete Stories'}\n          </button>\n        </div>\n\n        {isUploading && (\n          <p style={{\n            fontFamily: 'Poppins, sans-serif',\n            fontSize: '1.1rem',\n            color: '#87CEEB',\n            textAlign: 'center',\n            margin: '1rem 0'\n          }}>\n            Uploading images...\n          </p>\n        )}\n\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          multiple\n          onChange={handleFileSelect}\n          style={{ display: 'none' }}\n          ref={fileInputRef}\n        />\n\n        {renderDescription()}\n        \n        <StoryGrid\n          stories={stories}\n          isDeleteMode={isDeleteMode}\n          onStorySelect={handleStorySelect}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default CreateDiaryPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}