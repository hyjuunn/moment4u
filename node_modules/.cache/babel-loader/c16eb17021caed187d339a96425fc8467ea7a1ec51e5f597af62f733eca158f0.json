{"ast":null,"code":"var _jsxFileName = \"/Users/hyunjunekim/Documents/GitHub/moment4u/src/components/StoryGrid.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoryGrid = ({\n  stories\n}) => {\n  _s();\n  // Generate stable keys for stories that persist across renders\n  const storyKeys = useMemo(() => {\n    return stories.map(story => ({\n      ...story,\n      key: story.id || `story-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n    }));\n  }, [stories]);\n  if (!stories || stories.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        padding: '2rem',\n        textAlign: 'center',\n        color: 'rgba(255, 255, 255, 0.7)'\n      },\n      children: \"No stories yet. Create your first story!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(3, 1fr)',\n      gap: '2rem',\n      width: '100%',\n      padding: '2rem',\n      alignItems: 'stretch',\n      justifyItems: 'center'\n    },\n    children: storyKeys.map(story => {\n      // Use first image as thumbnail if thumbnailUrl is not available\n      const thumbnailUrl = story.thumbnailUrl || (story.images && story.images.length > 0 ? story.images[0] : '');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'rgba(255, 255, 255, 0.1)',\n          borderRadius: '15px',\n          overflow: 'hidden',\n          border: '1px solid rgba(255, 255, 255, 0.2)',\n          transition: 'transform 0.3s ease, box-shadow 0.3s ease',\n          cursor: 'pointer',\n          width: '100%',\n          maxWidth: '300px',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '320px' // Fixed height for consistency\n        },\n        onMouseOver: e => {\n          const target = e.currentTarget;\n          target.style.transform = 'translateY(-5px)';\n          target.style.boxShadow = '0 8px 16px rgba(255, 255, 255, 0.2)';\n        },\n        onMouseOut: e => {\n          const target = e.currentTarget;\n          target.style.transform = 'translateY(0)';\n          target.style.boxShadow = 'none';\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '200px',\n            width: '100%'\n          },\n          children: thumbnailUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: thumbnailUrl,\n            alt: story.title || 'Story image',\n            style: {\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover'\n            },\n            onError: e => {\n              // If image fails to load, replace with a placeholder\n              e.currentTarget.src = 'https://via.placeholder.com/400x200?text=No+Image';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '1rem',\n            flexGrow: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: '0',\n              color: '#fff',\n              fontSize: '1.2rem',\n              fontWeight: 'bold',\n              textShadow: '0 0 10px rgba(255, 255, 255, 0.5)'\n            },\n            children: story.title || 'Untitled Story'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), story.createdAt && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0.5rem 0 0',\n              color: 'rgba(255, 255, 255, 0.7)',\n              fontSize: '0.9rem'\n            },\n            children: new Date(story.createdAt).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, story.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(StoryGrid, \"UzYptJufwRNURZyagEyDrtEbs8E=\");\n_c = StoryGrid;\nexport default StoryGrid;\nvar _c;\n$RefreshReg$(_c, \"StoryGrid\");","map":{"version":3,"names":["React","useMemo","jsxDEV","_jsxDEV","StoryGrid","stories","_s","storyKeys","map","story","key","id","Date","now","Math","random","toString","substr","length","style","width","padding","textAlign","color","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","alignItems","justifyItems","thumbnailUrl","images","background","borderRadius","overflow","border","transition","cursor","maxWidth","flexDirection","height","onMouseOver","e","target","currentTarget","transform","boxShadow","onMouseOut","src","alt","title","objectFit","onError","flexGrow","justifyContent","margin","fontSize","fontWeight","textShadow","createdAt","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/hyunjunekim/Documents/GitHub/moment4u/src/components/StoryGrid.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\n\ninterface Story {\n  id: string;\n  title: string;\n  content: string;\n  thumbnailUrl: string;\n  images: string[];\n  createdAt: string;\n}\n\ninterface StoryGridProps {\n  stories: Story[];\n}\n\nconst StoryGrid: React.FC<StoryGridProps> = ({ stories }) => {\n  // Generate stable keys for stories that persist across renders\n  const storyKeys = useMemo(() => {\n    return stories.map(story => ({\n      ...story,\n      key: story.id || `story-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n    }));\n  }, [stories]);\n\n  if (!stories || stories.length === 0) {\n    return (\n      <div style={{\n        width: '100%',\n        padding: '2rem',\n        textAlign: 'center',\n        color: 'rgba(255, 255, 255, 0.7)'\n      }}>\n        No stories yet. Create your first story!\n      </div>\n    );\n  }\n\n  return (\n    <div style={{\n      display: 'grid',\n      gridTemplateColumns: 'repeat(3, 1fr)',\n      gap: '2rem',\n      width: '100%',\n      padding: '2rem',\n      alignItems: 'stretch',\n      justifyItems: 'center',\n    }}>\n      {storyKeys.map((story) => {\n        // Use first image as thumbnail if thumbnailUrl is not available\n        const thumbnailUrl = story.thumbnailUrl || (story.images && story.images.length > 0 ? story.images[0] : '');\n        \n        return (\n          <div\n            key={story.key}\n            style={{\n              background: 'rgba(255, 255, 255, 0.1)',\n              borderRadius: '15px',\n              overflow: 'hidden',\n              border: '1px solid rgba(255, 255, 255, 0.2)',\n              transition: 'transform 0.3s ease, box-shadow 0.3s ease',\n              cursor: 'pointer',\n              width: '100%',\n              maxWidth: '300px',\n              display: 'flex',\n              flexDirection: 'column',\n              height: '320px', // Fixed height for consistency\n            }}\n            onMouseOver={(e) => {\n              const target = e.currentTarget;\n              target.style.transform = 'translateY(-5px)';\n              target.style.boxShadow = '0 8px 16px rgba(255, 255, 255, 0.2)';\n            }}\n            onMouseOut={(e) => {\n              const target = e.currentTarget;\n              target.style.transform = 'translateY(0)';\n              target.style.boxShadow = 'none';\n            }}\n          >\n            <div style={{ height: '200px', width: '100%' }}>\n              {thumbnailUrl && (\n                <img\n                  src={thumbnailUrl}\n                  alt={story.title || 'Story image'}\n                  style={{\n                    width: '100%',\n                    height: '100%',\n                    objectFit: 'cover',\n                  }}\n                  onError={(e) => {\n                    // If image fails to load, replace with a placeholder\n                    e.currentTarget.src = 'https://via.placeholder.com/400x200?text=No+Image';\n                  }}\n                />\n              )}\n            </div>\n            <div style={{\n              padding: '1rem',\n              flexGrow: 1,\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'space-between'\n            }}>\n              <h3 style={{\n                margin: '0',\n                color: '#fff',\n                fontSize: '1.2rem',\n                fontWeight: 'bold',\n                textShadow: '0 0 10px rgba(255, 255, 255, 0.5)',\n              }}>\n                {story.title || 'Untitled Story'}\n              </h3>\n              {story.createdAt && (\n                <p style={{\n                  margin: '0.5rem 0 0',\n                  color: 'rgba(255, 255, 255, 0.7)',\n                  fontSize: '0.9rem',\n                }}>\n                  {new Date(story.createdAt).toLocaleDateString()}\n                </p>\n              )}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default StoryGrid; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}