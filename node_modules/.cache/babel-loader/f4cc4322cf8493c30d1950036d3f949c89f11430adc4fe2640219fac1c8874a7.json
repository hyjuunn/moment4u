{"ast":null,"code":"var _jsxFileName = \"/Users/hyunjunekim/Documents/GitHub/moment4u/src/components/StoryGrid.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from 'react';\nimport styles from './StoryGrid.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoryGrid = ({\n  stories,\n  isDeleteMode = false,\n  onStorySelect\n}) => {\n  _s();\n  const [selectedStories, setSelectedStories] = useState(new Set());\n\n  // Generate stable keys for stories that persist across renders\n  const storyKeys = useMemo(() => {\n    return stories.map(story => ({\n      ...story,\n      key: story.id || `story-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n    }));\n  }, [stories]);\n  const handleStoryClick = storyId => {\n    if (!isDeleteMode) return;\n    setSelectedStories(prev => {\n      const newSelected = new Set(prev);\n      if (newSelected.has(storyId)) {\n        newSelected.delete(storyId);\n      } else {\n        newSelected.add(storyId);\n      }\n      if (onStorySelect) {\n        onStorySelect(storyId);\n      }\n      return newSelected;\n    });\n  };\n  if (!stories || stories.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyMessage,\n      children: \"No stories yet. Create your first story!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.gridContainer,\n    children: storyKeys.map(story => {\n      const thumbnailUrl = story.thumbnailUrl || (story.images && story.images.length > 0 ? story.images[0] : '');\n      const isSelected = selectedStories.has(story.id);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleStoryClick(story.id),\n        className: `${styles.storyCard} ${isDeleteMode ? styles.deleteMode : ''} ${isSelected ? styles.selected : ''}`,\n        children: [isDeleteMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.selectionCircle} ${isSelected ? styles.selectedCircle : ''}`,\n          children: isSelected && '✓'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.imageContainer,\n          children: thumbnailUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: thumbnailUrl,\n            alt: story.title || 'Story image',\n            className: styles.image,\n            onError: e => {\n              e.currentTarget.src = 'https://via.placeholder.com/400x200?text=No+Image';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.contentContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: styles.title,\n            children: story.title || 'Untitled Story'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), story.createdAt && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.date,\n            children: new Date(story.createdAt).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, story.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(StoryGrid, \"Y1iKgsYi8LMATq9nkAck2NGohqo=\");\n_c = StoryGrid;\nexport default StoryGrid;\nvar _c;\n$RefreshReg$(_c, \"StoryGrid\");","map":{"version":3,"names":["React","useMemo","useState","styles","jsxDEV","_jsxDEV","StoryGrid","stories","isDeleteMode","onStorySelect","_s","selectedStories","setSelectedStories","Set","storyKeys","map","story","key","id","Date","now","Math","random","toString","substr","handleStoryClick","storyId","prev","newSelected","has","delete","add","length","className","emptyMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","gridContainer","thumbnailUrl","images","isSelected","onClick","storyCard","deleteMode","selected","selectionCircle","selectedCircle","imageContainer","src","alt","title","image","onError","e","currentTarget","contentContainer","createdAt","date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/hyunjunekim/Documents/GitHub/moment4u/src/components/StoryGrid.tsx"],"sourcesContent":["import React, { useMemo, useState } from 'react';\nimport styles from './StoryGrid.module.css';\n\ninterface Story {\n  id: string;\n  title: string;\n  content: string;\n  thumbnailUrl: string;\n  images: string[];\n  createdAt: string;\n}\n\ninterface StoryGridProps {\n  stories: Story[];\n  isDeleteMode?: boolean;\n  onStorySelect?: (storyId: string) => void;\n}\n\nconst StoryGrid: React.FC<StoryGridProps> = ({ stories, isDeleteMode = false, onStorySelect }) => {\n  const [selectedStories, setSelectedStories] = useState<Set<string>>(new Set());\n\n  // Generate stable keys for stories that persist across renders\n  const storyKeys = useMemo(() => {\n    return stories.map(story => ({\n      ...story,\n      key: story.id || `story-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n    }));\n  }, [stories]);\n\n  const handleStoryClick = (storyId: string) => {\n    if (!isDeleteMode) return;\n    \n    setSelectedStories(prev => {\n      const newSelected = new Set(prev);\n      if (newSelected.has(storyId)) {\n        newSelected.delete(storyId);\n      } else {\n        newSelected.add(storyId);\n      }\n      if (onStorySelect) {\n        onStorySelect(storyId);\n      }\n      return newSelected;\n    });\n  };\n\n  if (!stories || stories.length === 0) {\n    return (\n      <div className={styles.emptyMessage}>\n        No stories yet. Create your first story!\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.gridContainer}>\n      {storyKeys.map((story) => {\n        const thumbnailUrl = story.thumbnailUrl || (story.images && story.images.length > 0 ? story.images[0] : '');\n        const isSelected = selectedStories.has(story.id);\n        \n        return (\n          <div\n            key={story.key}\n            onClick={() => handleStoryClick(story.id)}\n            className={`${styles.storyCard} ${isDeleteMode ? styles.deleteMode : ''} ${isSelected ? styles.selected : ''}`}\n          >\n            {isDeleteMode && (\n              <div className={`${styles.selectionCircle} ${isSelected ? styles.selectedCircle : ''}`}>\n                {isSelected && '✓'}\n              </div>\n            )}\n            <div className={styles.imageContainer}>\n              {thumbnailUrl && (\n                <img\n                  src={thumbnailUrl}\n                  alt={story.title || 'Story image'}\n                  className={styles.image}\n                  onError={(e) => {\n                    e.currentTarget.src = 'https://via.placeholder.com/400x200?text=No+Image';\n                  }}\n                />\n              )}\n            </div>\n            <div className={styles.contentContainer}>\n              <h3 className={styles.title}>\n                {story.title || 'Untitled Story'}\n              </h3>\n              {story.createdAt && (\n                <p className={styles.date}>\n                  {new Date(story.createdAt).toLocaleDateString()}\n                </p>\n              )}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default StoryGrid; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}